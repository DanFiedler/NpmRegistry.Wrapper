name: release

on:
  release:
    types:
      - edited
      - released

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # enable GitHub OIDC token issuance for this job

    steps:
    - uses: actions/checkout@v4

    # get version from tag (e.g., v1.2.3 --> 1.2.3)
    - name: Get version
      id: get_version
      uses: JanneMattila/get-version-from-tag@22de24a56e53ef11268538c9e6a77659a142afa7 # v4

    - name: Display version
      run: |
        VERSION=$(echo "${{ steps.get_version.outputs.version }}")
        echo $VERSION
              
    # edit NpmRegistry.Wrapper.csproj to replace with desired version
    - name: Replace version
      run: sed -i 's/<Version>1.0.0/<Version>${{ steps.get_version.outputs.version }}/g' /home/runner/work/NpmRegistry.Wrapper/NpmRegistry.Wrapper/NpmRegistry.Wrapper/NpmRegistry.Wrapper.csproj

    - name: Display project file
      run: cat /home/runner/work/NpmRegistry.Wrapper/NpmRegistry.Wrapper/NpmRegistry.Wrapper/NpmRegistry.Wrapper.csproj

    # build our library, run tests, and create the NuGet package
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore 
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal
    - name: Pack
      run: dotnet pack /home/runner/work/NpmRegistry.Wrapper/NpmRegistry.Wrapper/NpmRegistry.Wrapper/NpmRegistry.Wrapper.csproj

    # Get a short-lived NuGet API key
    - name: NuGet login (OIDC → temp API key)
      uses: NuGet/login@v1
      id: login
      with:
        user: fiedlerd

    # Publish package to NuGet
    - name: Publish to Nuget
      run: dotnet nuget push **\*.nupkg -s 'https://api.nuget.org/v3/index.json' -k ${{steps.login.outputs.NUGET_API_KEY}}

      